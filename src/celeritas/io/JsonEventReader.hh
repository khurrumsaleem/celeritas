//------------------------------- -*- C++ -*- -------------------------------//
// Copyright Celeritas contributors: see top-level COPYRIGHT file for details
// SPDX-License-Identifier: (Apache-2.0 OR MIT)
//---------------------------------------------------------------------------//
//! \file celeritas/io/JsonEventReader.hh
//---------------------------------------------------------------------------//
#pragma once

#include <fstream>
#include <string>

#include "corecel/Macros.hh"
#include "celeritas/phys/Primary.hh"

#include "EventIOInterface.hh"

namespace celeritas
{
class ParticleParams;

//---------------------------------------------------------------------------//
/*!
 * Read file generated by \c JsonEventWriter .
 */
class JsonEventReader : public EventReaderInterface
{
  public:
    //!@{
    //! \name Type aliases
    using SPConstParticles = std::shared_ptr<ParticleParams const>;
    using result_type = std::vector<Primary>;
    //!@}

    // Construct with filename
    JsonEventReader(std::string const& filename, SPConstParticles particles);

    //! Prevent copying and moving
    CELER_DELETE_COPY_MOVE(JsonEventReader);
    ~JsonEventReader() override = default;

    // Read a single event from the json file
    result_type operator()() final;

    //! Get total number of events
    size_type num_events() const final { return num_events_; }

  private:
    std::ifstream infile_;
    SPConstParticles particles_;
    size_type num_events_{0};
};

//---------------------------------------------------------------------------//
}  // namespace celeritas
